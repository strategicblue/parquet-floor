resource_types:
- name: slack-notification
  type: registry-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: parquet-floor
  type: git
  icon: git
  webhook_token: ((concourse-webhook-token))
  check_every: 24h
  source:
    uri: git@github.com:strategicblue/parquet-floor.git
    branch: master
    private_key: ((concourse-git/private_key))

- name: slack-alert
  type: slack-notification
  icon: slack
  source:
    url: ((slack-webhook))

- name: every-morning
  type: time
  icon: clock
  source:
    start: 5:45 AM
    stop: 6:00 AM
    days: [Monday, Tuesday, Wednesday, Thursday, Friday]
    initial_version: true
    location: Europe/London

jobs:
- name: codecheck
  <<: &job_setup
    serial: true
    build_log_retention: { builds: 100 }
    on_failure:
      params:
        silent: true
        text: |
          <!here> Build FAILED: $BUILD_PIPELINE_NAME - $BUILD_JOB_NAME
          $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
      put: slack-alert
  plan:
  - &checkout
    get: parquet-floor
    params: {depth: 1}
    trigger: true
  - task: lint
    timeout: 10m
    config: &basic_config
      platform: linux
      image_resource:
        type: registry-image
        source: {repository: maven, tag: "3-eclipse-temurin-21"}
      inputs:
      - name: parquet-floor
      caches:
      - path: maven
      run:
        dir: parquet-floor
        path: scripts/run-mvn.sh
        args: [ "checkstyle:check", "-Dcheckstyle.config.location=checkstyle.xml" ]

- name: unit-tests
  <<: *job_setup
  plan:
  - <<: *checkout
  - task: test
    timeout: 10m
    config:
      <<: *basic_config
      run:
        dir: parquet-floor
        path: scripts/run-mvn.sh
        args: [ test ]

- name: release
  <<: *job_setup
  plan:
    - <<: *checkout
      passed: [unit-tests]
    - task: publish-to-maven-central
      timeout: 35m
      params:
        MVN_USERNAME: ((mvn-publish-token/username))
        MVN_PASSWORD: ((mvn-publish-token/password))
        GPG_PRIVATE_KEY: ((concourse-pgp/private_key))
        GPG_PASSPHRASE: ((concourse-pgp-passphrase))
        GIT_AUTHOR_NAME: 'Releaser'
        GIT_AUTHOR_EMAIL: 'systems@strategic-blue.com'
        GIT_COMMITTER_NAME: 'Releaser'
        GIT_COMMITTER_EMAIL: 'systems@strategic-blue.com'
      config:
        <<: *basic_config
        outputs:
          - name: parquet-floor
        run:
          dir: parquet-floor
          path: scripts/release.sh
    - put: parquet-floor
      params:
        repository: parquet-floor
      get_params: {skip_download: true}

- name: dependencies
  <<: *job_setup
  plan:
  - get: every-morning
    trigger: true
  - <<: *checkout
    trigger: false
  - task: upgrade-dependencies
    timeout: 15m
    params:
      GIT_AUTHOR_NAME: 'Autobumper'
      GIT_AUTHOR_EMAIL: 'systems@strategic-blue.com'
      GIT_COMMITTER_NAME: 'Autobumper'
      GIT_COMMITTER_EMAIL: 'systems@strategic-blue.com'
    config:
      <<: *basic_config
      outputs:
      - name: parquet-floor
      run:
        dir: parquet-floor
        path: sh
        args:
        - -c
        - scripts/run-mvn.sh versions:use-latest-releases -P dependencies && (git commit -am "Upgrade dependency versions." || true)
  - put: parquet-floor
    params:
      repository: parquet-floor
    get_params: {skip_download: true}
